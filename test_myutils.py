import pandas as pd
from pandas_myutils.utils import order, idx_toggle_multi, idx_propagate_levels

cols_flat = [ 'person.id', 'person.fullName.John Doe', 'person.link', 'jerseyNumber',
             'position.code.C', 'position.name.Center', 'stats.skaterStats.goals',
             'stats.skaterStats.assists', 'stats.skaterStats' ]
cols_mult = [
    ('person', 'id', ''),
    ('person', 'fullName', 'John Doe'),
    ('person', 'link', ''),
    ('jerseyNumber', '', ''),
    ('position', 'code', 'C'),
    ('position', 'name', 'Center'),
    ('stats', 'skaterStats', 'goals'),
    ('stats', 'skaterStats', 'assists'),
    ('stats', 'skaterStats', '')
]
cols_prop= [
    ('person', 'id', 'id'),
    ('person', 'fullName', 'John Doe'),
    ('person', 'link', 'link'),
    ('jerseyNumber', 'jerseyNumber', 'jerseyNumber'),
    ('position', 'code', 'C'),
    ('position', 'name', 'Center'),
    ('stats', 'skaterStats', 'goals'),
    ('stats', 'skaterStats', 'assists'),
    ('stats', 'skaterStats', 'skaterStats')
]

#
# Conventions in this file:

#  - index_* variables:  are for comparison and not generated by our functions
#  - idx_* variables:    are generated by our functions

#
# create indices for comparison purposes

index_flat = pd.Index( cols_flat )
index_mult = pd.Index( cols_mult )
index_prop = pd.Index( cols_prop )

# the tuples split from a flat index will not be of equal length and from_tuples() will generate nan's for the missing elements
#  - index_from_tuples is used mostly to test idx_propagate_levels()
tuples_list = [ tuple( colname.split('.') ) for colname in index_flat ]
index_from_tuples = pd.MultiIndex.from_tuples( tuples_list, names=['level_1', 'level_2', 'level_3'] )

#
# idx_propagate_levels()

idx_prop     = idx_propagate_levels( index_from_tuples )
idx_reverted = idx_propagate_levels( idx_prop, revert=True )
print( idx_prop==index_prop )
print( idx_reverted==index_from_tuples )

#
# idx_toggle_multi(): propagate=False

idx_mult          = idx_toggle_multi( index_flat,  propragate=False )
idx_flat_reverted = idx_toggle_multi( idx_mult,    propragate=False )
print( idx_mult==index_mult )
print( idx_flat_reverted==index_flat )

idx_flat          = idx_toggle_multi( index_mult,  propragate=False )
idx_mult_reverted = idx_toggle_multi( idx_flat,    propragate=False )
print( idx_flat==index_flat )
print( idx_mult_reverted==index_mult )

#
# idx_toggle_multi(): propagate=True (the current default)

idx_mult          = idx_toggle_multi( index_flat,  propragate=True )
idx_flat_reverted = idx_toggle_multi( idx_mult,    propragate=True )
print( idx_mult==index_prop )
print( idx_flat_reverted==index_flat )

idx_flat          = idx_toggle_multi( index_mult,  propragate=True )
idx_mult_reverted = idx_toggle_multi( idx_flat,    propragate=True )
print( idx_flat==index_flat )
print( idx_mult_reverted==index_prop )

breakpoint()

